{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-smoothscroll/index.js","webpack:///./src/components/presentaitional/FixedRightSideBar.js","webpack:///./src/components/presentaitional/Anchor.js","webpack:///./src/components/container/MarkdownAutoLink.js","webpack:///./src/components/presentaitional/RelatedPosts.js","webpack:///./src/templates/posts.js"],"names":["exports","__esModule","_default","selector","document","querySelector","scrollIntoView","behavior","block","children","className","title","href","depth","isSelected","onClick","scrollTo","isAnchorSelected","anchorTop","scrollTop","window","innerHeight","useState","anchors","setAnchors","setScrollTop","scrollHandler","useCallback","newScrollTop","scrollY","documentElement","useEffect","addEventListener","anchorElements","getElementsByClassName","last_depth","slice","call","map","anchor","parseInt","parentElement","nodeName","id","innerText","top","getBoundingClientRect","filterAnchorDetails","key","relatedPostList","post","to","getPathOfPost","data","markdownRemark","frontmatter","html","excerpt","edges","allMarkdownRemark","useMemo","edge","node","Layout","description","image","fluid","childImageSharp","date","dangerouslySetInnerHTML","__html","MarkdownAutoLink","RelatedPosts","pageQuery"],"mappings":"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","file":"component---src-templates-posts-js-6d1a2de44f86f31ce7bf.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n */\nvar scrollTo = function scrollTo(selector) {\n  document.querySelector(selector).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start'\n  });\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","import React from 'react';\r\n\r\nimport './FixedRightSideBar.css';\r\n\r\nexport default ({ children }) => {\r\n    return (\r\n        <div className=\"fixed-right-side-bar\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport scrollTo from 'gatsby-plugin-smoothscroll';\r\n\r\nimport './Anchor.css';\r\n\r\nexport default ({ title, href, depth, isSelected }) => {\r\n    return (\r\n        <div className={`anchor ${isSelected? 'selected' : ''} depth${depth}`} onClick={() => scrollTo(href)}>\r\n            {title}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport Anchor from '../presentaitional/Anchor';\r\n\r\nconst isAnchorSelected = (anchorTop, scrollTop) =>{\r\n    // 현재 스크롤된 위치에서 화면 중앙에 anchor top 이 왔을 경우\r\n    return scrollTop + window.innerHeight/2 > anchorTop;\r\n};\r\n\r\nconst filterAnchorDetails = anchors => {\r\n    let last_depth = 0;\r\n    anchors = [].slice.call(anchors).map(anchor => {\r\n        let depth = parseInt(anchor.parentElement.nodeName[1]);\r\n        if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1;\r\n        last_depth = depth\r\n        return ({\r\n            href: \"#\"+ anchor.parentElement.id,\r\n            title: anchor.parentElement.innerText,\r\n            depth: depth,\r\n            top: anchor.getBoundingClientRect().top,\r\n        });\r\n    });\r\n    return anchors;\r\n}\r\n\r\nexport default () => {\r\n    const [anchors, setAnchors] = useState([]);\r\n    const [scrollTop, setScrollTop] = useState(null);\r\n\r\n    const scrollHandler = useCallback(() => {\r\n        const newScrollTop = window.scrollY || document.documentElement.scrollTop;\r\n        setScrollTop(newScrollTop);\r\n    }, []);\r\n\r\n    const getAnchorItems = (anchorList) => {\r\n        return anchorList.map((anchor) => {\r\n            const { title, href, depth, top } = anchor;\r\n            return (\r\n                <Anchor\r\n                    title={title}\r\n                    href={href}\r\n                    depth={depth}\r\n                    isSelected={isAnchorSelected(top , scrollTop)}\r\n                    key={`post-anchor-${title}`}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // TODO: unmount 될 때 event 취소하기\r\n        // TODO: throttling 걸기\r\n        window.addEventListener('scroll', scrollHandler);\r\n    }, [scrollHandler]);\r\n\r\n    useEffect(() => {\r\n        const anchorElements = document.getElementsByClassName('markdown-header-auto-link');\r\n        if (anchorElements) {\r\n            setAnchors(filterAnchorDetails(anchorElements));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {getAnchorItems(anchors)}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { getPathOfPost } from '../../lib/path';\r\n\r\nexport default ({ relatedPostList }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                RelatedPost\r\n            </div>\r\n            {\r\n                relatedPostList.map((post) => {\r\n                    return (\r\n                        <Link to={getPathOfPost(post.id)} key={`related-post-${post.id}`}>\r\n                            {post.title}\r\n                        </Link>\r\n                    );\r\n                }) \r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import React, { useMemo } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from '../components/container/Layout';\r\nimport SEO from \"../components/container/Seo\";\r\nimport FixedRightSideBar from \"../components/presentaitional/FixedRightSideBar\";\r\nimport MarkdownAutoLink from \"../components/container/MarkdownAutoLink\";\r\nimport RelatedPosts from \"../components/presentaitional/RelatedPosts\";\r\n\r\nexport default ({ data }) => {\r\n    const {\r\n        markdownRemark: {\r\n            frontmatter,\r\n            html,\r\n            excerpt\r\n        },\r\n        allMarkdownRemark: {\r\n            edges,\r\n        },\r\n    } = data;\r\n\r\n    const relatedPostList = useMemo(() => {\r\n        return edges.map((edge) => {\r\n            const { id, title } = edge.node.frontmatter;\r\n            return {\r\n                id,\r\n                title,\r\n            };\r\n        }) \r\n    }, [edges]);\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO\r\n                title={frontmatter.title}\r\n                description={excerpt}\r\n            />\r\n            <div className=\"blog-post-container\">\r\n                <div className=\"blog-post\">\r\n                    {\r\n                        frontmatter.image &&\r\n                        <Img fluid={frontmatter.image.childImageSharp.fluid} />\r\n                    }\r\n                    <h1>{frontmatter.title}</h1>\r\n                    <h2>{frontmatter.date}</h2>\r\n                    <div\r\n                        className=\"blog-post-content\"\r\n                        dangerouslySetInnerHTML={{ __html: html }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <FixedRightSideBar>\r\n                <MarkdownAutoLink />\r\n                <RelatedPosts relatedPostList={relatedPostList}/>\r\n            </FixedRightSideBar>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n    query($postId: Int!, $relatedPostIds: [Int!]!) {\r\n        markdownRemark(frontmatter: { id: { eq: $postId } }) {\r\n            html\r\n            excerpt(pruneLength: 160)\r\n            frontmatter {\r\n                id\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                title\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 800) {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        allMarkdownRemark(filter: {frontmatter: {id: {in: $relatedPostIds}}}) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        id\r\n                        title\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}