{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-smoothscroll/index.js","webpack:///./src/components/presentaitional/FixedRightSideBar.js","webpack:///./src/components/presentaitional/Anchor.js","webpack:///./src/components/container/MarkdownAutoLink.js","webpack:///./src/templates/posts.js"],"names":["exports","__esModule","_default","selector","document","querySelector","scrollIntoView","behavior","block","children","className","title","href","onClick","scrollTo","constructTree","list","deleteNode","i","length","j","depth","push","sort","a","b","forEach","index","splice","useState","anchors","setAnchors","getAnchorItems","useCallback","anchorList","map","anchor","useEffect","anchorElements","getElementsByClassName","last_depth","slice","call","parseInt","parentElement","nodeName","id","innerText","filterAnchorDetails","markdownRemark","data","frontmatter","html","excerpt","Layout","description","image","fluid","childImageSharp","date","dangerouslySetInnerHTML","__html","MarkdownAutoLink","pageQuery"],"mappings":"2FAEAA,EAAQC,YAAa,EACrBD,EAAO,aAAc,EAMrB,IAOIE,EAPW,SAAkBC,GAC/BC,SAASC,cAAcF,GAAUG,eAAe,CAC9CC,SAAU,SACVC,MAAO,WAKXR,EAAO,QAAcE,G,+GCbN,G,UAAA,YAAmB,IAAhBO,EAAe,EAAfA,SACd,OACI,yBAAKC,UAAU,wBACVD,K,iCCDE,G,UAAA,YAAgC,IAA7BE,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMH,EAAe,EAAfA,SAC3B,OACI,yBAAKC,UAAU,UACX,yBAAKG,QAAS,kBAAMC,IAASF,KACxBD,GAEJF,KCSPM,EAAgB,SAAAC,GAElB,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/B,IAAK,IAAIE,EAAIF,EAAE,EAAGE,EAAIJ,EAAKG,OAAQC,IACjC,GAAIJ,EAAKE,GAAGG,MAAQ,IAAML,EAAKI,GAAGC,MAC9BL,EAAKE,GAAGT,SAASa,KAAKN,EAAKI,IAC3BH,EAAWK,KAAKF,QAEf,GAAIJ,EAAKE,GAAGG,OAASL,EAAKI,GAAGC,MAAO,MAG7CJ,EAAWM,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAED,KAAGE,SAAQ,SAAAC,GAAK,OAAIX,EAAKY,OAAOD,EAAM,OAGpD,aAAO,IAAD,EACaE,mBAAS,IAAhCC,EADU,KACDC,EADC,KAGXC,EAAiBC,uBAAY,SAACC,GAChC,OAAOA,EAAWC,KAAI,SAACC,GACnB,OAAIA,EAAO3B,SAASU,OAAS,EAErB,kBAAC,EAAD,CACIR,MAAOyB,EAAOzB,MACdC,KAAMwB,EAAOxB,MAEZoB,EAAeI,EAAO3B,WAK/B,kBAAC,EAAD,CAAQE,MAAOyB,EAAOzB,MAAOC,KAAMwB,EAAOxB,YAGnD,IASH,OAPAyB,qBAAU,WACN,IAAMC,EAAiBlC,SAASmC,uBAAuB,6BACnDD,GACAP,EAvDgB,SAAAD,GACxB,IAAIU,EAAa,EAajB,OAZAV,EAAU,GAAGW,MAAMC,KAAKZ,GAASK,KAAI,SAAAC,GACjC,IAAIf,EAAQsB,SAASP,EAAOQ,cAAcC,SAAS,IAGnD,OAFmB,IAAfL,GAAoBnB,EAAQmB,IAAYnB,EAAQmB,EAAa,GACjEA,EAAanB,EACL,CACJT,KAAM,IAAKwB,EAAOQ,cAAcE,GAChCnC,MAAOyB,EAAOQ,cAAcG,UAC5B1B,MAAOA,EACPZ,SAAU,OAGlBM,EAAce,GACPA,EAyCYkB,CAAoBV,MAEpC,IAGC,6BACKN,EAAeF,KCjE5B,0CAUe,sBAAe,IAClBmB,EADiB,EAAXC,KACND,eACAE,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAC3B,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CACI3C,MAAOwC,EAAYxC,MACnB4C,YAAaF,IAEjB,yBAAK3C,UAAU,uBACX,yBAAKA,UAAU,aAEPyC,EAAYK,OACZ,kBAAC,IAAD,CAAKC,MAAON,EAAYK,MAAME,gBAAgBD,QAElD,4BAAKN,EAAYxC,OACjB,4BAAKwC,EAAYQ,MACjB,yBACIjD,UAAU,oBACVkD,wBAAyB,CAAEC,OAAQT,OAI/C,kBAAC,EAAD,KACI,kBAACU,EAAD,SAxBD,IA8BFC,EAAS","file":"component---src-templates-posts-js-61b0767e5bb7a7b035b2.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n */\nvar scrollTo = function scrollTo(selector) {\n  document.querySelector(selector).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start'\n  });\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","import React from 'react';\n\nimport './FixedRightSideBar.css';\n\nexport default ({ children }) => {\n    return (\n        <div className=\"fixed-right-side-bar\">\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport scrollTo from 'gatsby-plugin-smoothscroll';\n\nimport './Anchor.css';\n\nexport default ({ title, href, children }) => {\n    return (\n        <div className=\"anchor\">\n            <div onClick={() => scrollTo(href)}>\n                {title}\n            </div>\n            {children}\n        </div>\n    );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport Anchor from '../presentaitional/Anchor';\r\n\r\nconst filterAnchorDetails = anchors => {\r\n    let last_depth = 0;\r\n    anchors = [].slice.call(anchors).map(anchor => {\r\n        let depth = parseInt(anchor.parentElement.nodeName[1]);\r\n        if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1;\r\n        last_depth = depth\r\n        return ({\r\n            href: \"#\"+ anchor.parentElement.id,\r\n            title: anchor.parentElement.innerText,\r\n            depth: depth,\r\n            children: []\r\n        });\r\n    });\r\n    constructTree(anchors);\r\n    return anchors;\r\n}\r\n\r\nconst constructTree = list => {\r\n    let deleteNode = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      for (let j = i+1; j < list.length; j++) {\r\n        if (list[i].depth + 1 === list[j].depth) {\r\n            list[i].children.push(list[j]);\r\n            deleteNode.push(j);\r\n        }\r\n        else if (list[i].depth >= list[j].depth) break;\r\n      } \r\n    }\r\n    deleteNode.sort((a,b)=>b-a).forEach(index => list.splice(index,1));\r\n}\r\n\r\nexport default () => {\r\n    const [anchors, setAnchors] = useState([]);\r\n\r\n    const getAnchorItems = useCallback((anchorList) => {\r\n        return anchorList.map((anchor) => {\r\n            if (anchor.children.length > 0) {\r\n                return (\r\n                    <Anchor\r\n                        title={anchor.title}\r\n                        href={anchor.href}\r\n                    >\r\n                        {getAnchorItems(anchor.children)}\r\n                    </Anchor>\r\n                );\r\n            }\r\n            return (\r\n                <Anchor title={anchor.title} href={anchor.href}/>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const anchorElements = document.getElementsByClassName('markdown-header-auto-link');\r\n        if (anchorElements) {\r\n            setAnchors(filterAnchorDetails(anchorElements));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {getAnchorItems(anchors)}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from '../components/container/Layout';\nimport SEO from \"../components/container/Seo\";\nimport FixedRightSideBar from \"../components/presentaitional/FixedRightSideBar\";\nimport MarkdownAutoLink from \"../components/container/MarkdownAutoLink\";\n\n// this prop will be injected by the GraphQL query below.\nexport default ({ data }) => {\n    const { markdownRemark } = data // data.markdownRemark holds your post data\n    const { frontmatter, html, excerpt } = markdownRemark\n    return (\n        <Layout>\n            <SEO\n                title={frontmatter.title}\n                description={excerpt}\n            />\n            <div className=\"blog-post-container\">\n                <div className=\"blog-post\">\n                    {\n                        frontmatter.image &&\n                        <Img fluid={frontmatter.image.childImageSharp.fluid} />\n                    }\n                    <h1>{frontmatter.title}</h1>\n                    <h2>{frontmatter.date}</h2>\n                    <div\n                        className=\"blog-post-content\"\n                        dangerouslySetInnerHTML={{ __html: html }}\n                    />\n                </div>\n            </div>\n            <FixedRightSideBar>\n                <MarkdownAutoLink/>\n            </FixedRightSideBar>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query($postId: String!) {\n        markdownRemark(frontmatter: { id: { eq: $postId } }) {\n            html\n            excerpt(pruneLength: 160)\n            frontmatter {\n                id\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                image {\n                    childImageSharp {\n                        fluid(maxWidth: 800) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}