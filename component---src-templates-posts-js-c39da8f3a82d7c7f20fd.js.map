{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-smoothscroll/index.js","webpack:///./src/components/presentaitional/FixedRightSideBar.js","webpack:///./src/components/presentaitional/Anchor.js","webpack:///./src/components/container/MarkdownAutoLink.js","webpack:///./src/templates/posts.js"],"names":["exports","__esModule","_default","selector","document","querySelector","scrollIntoView","behavior","block","children","className","title","href","depth","isSelected","onClick","scrollTo","isAnchorSelected","anchorTop","scrollTop","window","innerHeight","useState","anchors","setAnchors","setScrollTop","scrollHandler","useCallback","newScrollTop","scrollY","documentElement","useEffect","addEventListener","anchorElements","getElementsByClassName","last_depth","slice","call","map","anchor","parseInt","parentElement","nodeName","id","innerText","top","getBoundingClientRect","filterAnchorDetails","markdownRemark","data","frontmatter","html","excerpt","Layout","description","image","fluid","childImageSharp","date","dangerouslySetInnerHTML","__html","MarkdownAutoLink","pageQuery"],"mappings":"2FAEAA,EAAQC,YAAa,EACrBD,EAAO,aAAc,EAMrB,IAOIE,EAPW,SAAkBC,GAC/BC,SAASC,cAAcF,GAAUG,eAAe,CAC9CC,SAAU,SACVC,MAAO,WAKXR,EAAO,QAAcE,G,+GCbN,G,UAAA,YAAmB,IAAhBO,EAAe,EAAfA,SACd,OACI,yBAAKC,UAAU,wBACVD,K,qBCDE,G,UAAA,YAAyC,IAAtCE,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAClC,OACI,yBAAKJ,UAAS,WAAYI,EAAY,WAAa,IAArC,SAAgDD,EAASE,QAAS,kBAAMC,IAASJ,KAC1FD,KCLPM,EAAmB,SAACC,EAAWC,GAEjC,OAAOA,EAAYC,OAAOC,YAAY,EAAIH,GAmB/B,aAAO,IAAD,EACaI,mBAAS,IAAhCC,EADU,KACDC,EADC,OAEiBF,mBAAS,MAApCH,EAFU,KAECM,EAFD,KAIXC,EAAgBC,uBAAY,WAC9B,IAAMC,EAAeR,OAAOS,SAAWzB,SAAS0B,gBAAgBX,UAChEM,EAAaG,KACd,IAsBH,OAXAG,qBAAU,WACNX,OAAOY,iBAAiB,SAAUN,KACnC,IAEHK,qBAAU,WACN,IAAME,EAAiB7B,SAAS8B,uBAAuB,6BACnDD,GACAT,EAzCgB,SAAAD,GACxB,IAAIY,EAAa,EAYjB,OAXAZ,EAAU,GAAGa,MAAMC,KAAKd,GAASe,KAAI,SAAAC,GACjC,IAAI1B,EAAQ2B,SAASD,EAAOE,cAAcC,SAAS,IAGnD,OAFmB,IAAfP,GAAoBtB,EAAQsB,IAAYtB,EAAQsB,EAAa,GACjEA,EAAatB,EACL,CACJD,KAAM,IAAK2B,EAAOE,cAAcE,GAChChC,MAAO4B,EAAOE,cAAcG,UAC5B/B,MAAOA,EACPgC,IAAKN,EAAOO,wBAAwBD,QA+BzBE,CAAoBd,MAEpC,IAGC,6BACoBV,EArBFe,KAAI,SAACC,GAAY,IACvB5B,EAA4B4B,EAA5B5B,MAAOC,EAAqB2B,EAArB3B,KAAMC,EAAe0B,EAAf1B,MAAOgC,EAAQN,EAARM,IAC5B,OACI,kBAAC,EAAD,CAAQlC,MAAOA,EAAOC,KAAMA,EAAMC,MAAOA,EAAOC,WAAYG,EAAiB4B,EAAM1B,UCtCnG,0CAUe,sBAAe,IAClB6B,EADiB,EAAXC,KACND,eACAE,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAC3B,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CACI1C,MAAOuC,EAAYvC,MACnB2C,YAAaF,IAEjB,yBAAK1C,UAAU,uBACX,yBAAKA,UAAU,aAEPwC,EAAYK,OACZ,kBAAC,IAAD,CAAKC,MAAON,EAAYK,MAAME,gBAAgBD,QAElD,4BAAKN,EAAYvC,OACjB,4BAAKuC,EAAYQ,MACjB,yBACIhD,UAAU,oBACViD,wBAAyB,CAAEC,OAAQT,OAI/C,kBAAC,EAAD,KACI,kBAACU,EAAD,SAxBD,IA8BFC,EAAS","file":"component---src-templates-posts-js-c39da8f3a82d7c7f20fd.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n */\nvar scrollTo = function scrollTo(selector) {\n  document.querySelector(selector).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start'\n  });\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","import React from 'react';\n\nimport './FixedRightSideBar.css';\n\nexport default ({ children }) => {\n    return (\n        <div className=\"fixed-right-side-bar\">\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport scrollTo from 'gatsby-plugin-smoothscroll';\n\nimport './Anchor.css';\n\nexport default ({ title, href, depth, isSelected }) => {\n    return (\n        <div className={`anchor ${isSelected? 'selected' : ''} depth${depth}`} onClick={() => scrollTo(href)}>\n            {title}\n        </div>\n    );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport Anchor from '../presentaitional/Anchor';\r\n\r\nconst isAnchorSelected = (anchorTop, scrollTop) =>{\r\n    // 현재 스크롤된 위치에서 화면 중앙에 anchor top 이 왔을 경우\r\n    return scrollTop + window.innerHeight/2 > anchorTop;\r\n};\r\n\r\nconst filterAnchorDetails = anchors => {\r\n    let last_depth = 0;\r\n    anchors = [].slice.call(anchors).map(anchor => {\r\n        let depth = parseInt(anchor.parentElement.nodeName[1]);\r\n        if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1;\r\n        last_depth = depth\r\n        return ({\r\n            href: \"#\"+ anchor.parentElement.id,\r\n            title: anchor.parentElement.innerText,\r\n            depth: depth,\r\n            top: anchor.getBoundingClientRect().top,\r\n        });\r\n    });\r\n    return anchors;\r\n}\r\n\r\nexport default () => {\r\n    const [anchors, setAnchors] = useState([]);\r\n    const [scrollTop, setScrollTop] = useState(null);\r\n\r\n    const scrollHandler = useCallback(() => {\r\n        const newScrollTop = window.scrollY || document.documentElement.scrollTop;\r\n        setScrollTop(newScrollTop);\r\n    }, []);\r\n\r\n    const getAnchorItems = (anchorList) => {\r\n        return anchorList.map((anchor) => {\r\n            const { title, href, depth, top } = anchor;\r\n            return (\r\n                <Anchor title={title} href={href} depth={depth} isSelected={isAnchorSelected(top , scrollTop)}/>\r\n            );\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', scrollHandler);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const anchorElements = document.getElementsByClassName('markdown-header-auto-link');\r\n        if (anchorElements) {\r\n            setAnchors(filterAnchorDetails(anchorElements));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {getAnchorItems(anchors)}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from '../components/container/Layout';\nimport SEO from \"../components/container/Seo\";\nimport FixedRightSideBar from \"../components/presentaitional/FixedRightSideBar\";\nimport MarkdownAutoLink from \"../components/container/MarkdownAutoLink\";\n\n// this prop will be injected by the GraphQL query below.\nexport default ({ data }) => {\n    const { markdownRemark } = data // data.markdownRemark holds your post data\n    const { frontmatter, html, excerpt } = markdownRemark\n    return (\n        <Layout>\n            <SEO\n                title={frontmatter.title}\n                description={excerpt}\n            />\n            <div className=\"blog-post-container\">\n                <div className=\"blog-post\">\n                    {\n                        frontmatter.image &&\n                        <Img fluid={frontmatter.image.childImageSharp.fluid} />\n                    }\n                    <h1>{frontmatter.title}</h1>\n                    <h2>{frontmatter.date}</h2>\n                    <div\n                        className=\"blog-post-content\"\n                        dangerouslySetInnerHTML={{ __html: html }}\n                    />\n                </div>\n            </div>\n            <FixedRightSideBar>\n                <MarkdownAutoLink/>\n            </FixedRightSideBar>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n    query($postId: String!) {\n        markdownRemark(frontmatter: { id: { eq: $postId } }) {\n            html\n            excerpt(pruneLength: 160)\n            frontmatter {\n                id\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                image {\n                    childImageSharp {\n                        fluid(maxWidth: 800) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}